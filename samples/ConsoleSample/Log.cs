// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: log.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace K9Nano.Logging {

  /// <summary>Holder for reflection information generated from log.proto</summary>
  public static partial class LogReflection {

    #region Descriptor
    /// <summary>File descriptor for log.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LogReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cglsb2cucHJvdG8SB2xvZ2dpbmciswEKCUxvZ0VudGl0eRIlCgVsZXZlbBgB",
            "IAEoDjIWLmxvZ2dpbmcuTG9nRXZlbnRMZXZlbBIRCgl0aW1lc3RhbXAYAiAB",
            "KAMSDwoHbWFjaGluZRgDIAEoCRITCgthcHBsaWNhdGlvbhgEIAEoCRIQCghj",
            "YXRlZ29yeRgFIAEoCRIQCgh0cmFjZV9pZBgGIAEoCRIPCgdtZXNzYWdlGAcg",
            "ASgJEhEKCWV4Y2VwdGlvbhgIIAEoCSpbCg1Mb2dFdmVudExldmVsEgsKB1Zl",
            "cmJvc2UQABIJCgVEZWJ1ZxABEg8KC0luZm9ybWF0aW9uEAISCwoHV2Fybmlu",
            "ZxADEgkKBUVycm9yEAQSCQoFRmF0YWwQBUIRqgIOSzlOYW5vLkxvZ2dpbmdi",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::K9Nano.Logging.LogEventLevel), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::K9Nano.Logging.LogEntity), global::K9Nano.Logging.LogEntity.Parser, new[]{ "Level", "Timestamp", "Machine", "Application", "Category", "TraceId", "Message", "Exception" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum LogEventLevel {
    [pbr::OriginalName("Verbose")] Verbose = 0,
    [pbr::OriginalName("Debug")] Debug = 1,
    [pbr::OriginalName("Information")] Information = 2,
    [pbr::OriginalName("Warning")] Warning = 3,
    [pbr::OriginalName("Error")] Error = 4,
    [pbr::OriginalName("Fatal")] Fatal = 5,
  }

  #endregion

  #region Messages
  public sealed partial class LogEntity : pb::IMessage<LogEntity> {
    private static readonly pb::MessageParser<LogEntity> _parser = new pb::MessageParser<LogEntity>(() => new LogEntity());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogEntity> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::K9Nano.Logging.LogReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEntity() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEntity(LogEntity other) : this() {
      level_ = other.level_;
      timestamp_ = other.timestamp_;
      machine_ = other.machine_;
      application_ = other.application_;
      category_ = other.category_;
      traceId_ = other.traceId_;
      message_ = other.message_;
      exception_ = other.exception_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogEntity Clone() {
      return new LogEntity(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private global::K9Nano.Logging.LogEventLevel level_ = global::K9Nano.Logging.LogEventLevel.Verbose;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::K9Nano.Logging.LogEventLevel Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 2;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "machine" field.</summary>
    public const int MachineFieldNumber = 3;
    private string machine_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Machine {
      get { return machine_; }
      set {
        machine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "application" field.</summary>
    public const int ApplicationFieldNumber = 4;
    private string application_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Application {
      get { return application_; }
      set {
        application_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "category" field.</summary>
    public const int CategoryFieldNumber = 5;
    private string category_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Category {
      get { return category_; }
      set {
        category_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "trace_id" field.</summary>
    public const int TraceIdFieldNumber = 6;
    private string traceId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TraceId {
      get { return traceId_; }
      set {
        traceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 7;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "exception" field.</summary>
    public const int ExceptionFieldNumber = 8;
    private string exception_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Exception {
      get { return exception_; }
      set {
        exception_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogEntity);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogEntity other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (Timestamp != other.Timestamp) return false;
      if (Machine != other.Machine) return false;
      if (Application != other.Application) return false;
      if (Category != other.Category) return false;
      if (TraceId != other.TraceId) return false;
      if (Message != other.Message) return false;
      if (Exception != other.Exception) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != global::K9Nano.Logging.LogEventLevel.Verbose) hash ^= Level.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (Machine.Length != 0) hash ^= Machine.GetHashCode();
      if (Application.Length != 0) hash ^= Application.GetHashCode();
      if (Category.Length != 0) hash ^= Category.GetHashCode();
      if (TraceId.Length != 0) hash ^= TraceId.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Exception.Length != 0) hash ^= Exception.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Level != global::K9Nano.Logging.LogEventLevel.Verbose) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Timestamp);
      }
      if (Machine.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Machine);
      }
      if (Application.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Application);
      }
      if (Category.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Category);
      }
      if (TraceId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(TraceId);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Message);
      }
      if (Exception.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Exception);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != global::K9Nano.Logging.LogEventLevel.Verbose) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (Machine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Machine);
      }
      if (Application.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Application);
      }
      if (Category.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Category);
      }
      if (TraceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TraceId);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Exception.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Exception);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogEntity other) {
      if (other == null) {
        return;
      }
      if (other.Level != global::K9Nano.Logging.LogEventLevel.Verbose) {
        Level = other.Level;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.Machine.Length != 0) {
        Machine = other.Machine;
      }
      if (other.Application.Length != 0) {
        Application = other.Application;
      }
      if (other.Category.Length != 0) {
        Category = other.Category;
      }
      if (other.TraceId.Length != 0) {
        TraceId = other.TraceId;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Exception.Length != 0) {
        Exception = other.Exception;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = (global::K9Nano.Logging.LogEventLevel) input.ReadEnum();
            break;
          }
          case 16: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 26: {
            Machine = input.ReadString();
            break;
          }
          case 34: {
            Application = input.ReadString();
            break;
          }
          case 42: {
            Category = input.ReadString();
            break;
          }
          case 50: {
            TraceId = input.ReadString();
            break;
          }
          case 58: {
            Message = input.ReadString();
            break;
          }
          case 66: {
            Exception = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
